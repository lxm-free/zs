{"remainingRequest":"C:\\Users\\web\\Desktop\\lxm\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\web\\Desktop\\lxm\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\web\\Desktop\\lxm\\vue_app_00\\src\\components\\xz\\common\\Cart.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\web\\Desktop\\lxm\\vue_app_00\\src\\components\\xz\\common\\Cart.vue","mtime":1559272506299},{"path":"C:\\Users\\web\\Desktop\\lxm\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"C:\\Users\\web\\Desktop\\lxm\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"C:\\Users\\web\\Desktop\\lxm\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      list: []\n    };\n  },\n  created: function created() {\n    this.loadMore();\n  },\n  methods: {\n    delSelected: function delSelected() {\n      var _this = this;\n\n      //删除选中的商品\n      //1.创建变量保存空字符串\n      var str = \"\"; //2.创建循环遍历每个数组中的元素\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.list[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var item = _step.value;\n\n          //3.判断cb的选中状态是否为true\n          if (item.cb) {\n            //4.获取当前id拼字符串\n            str += item.id + \",\";\n          }\n        } //5.判断\n\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      if (str.length == 0) {\n        this.$messagebox(\"\", \"请选择要删除的商品\");\n        return;\n      }\n\n      str = str.substring(0, str.length - 1); //6.发送Ajax请求\n\n      var url = \"delAll\";\n      var obj = {\n        ids: str\n      };\n      this.axios.get(url, {\n        params: obj\n      }).then(function (result) {\n        _this.loadMore();\n      });\n    },\n    delAll: function delAll() {\n      var _this2 = this;\n\n      //清空购物车中的商品\n      //创建变量保存空字符串\n      var str = \"\"; //创建循环遍历数组\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this.list[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var item = _step2.value;\n          //获取当前元素id凭借字符串\n          str += item.id + \",\";\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      if (str.length == 0) {\n        this.$messagebox(\"\", \"请选中要删除的数据\");\n        return;\n      } //结果1,2,3\n\n\n      str = str.substring(0, str.length - 1); //发送Ajax请求获取数据\n      //创建url\n\n      var url = \"delAll\"; //创建obj\n\n      var obj = {\n        ids: str\n      }; //发送Ajax请求\n\n      this.axios.get(url, {\n        params: obj\n      }).then(function (result) {\n        _this2.loadMore();\n      });\n    },\n    selectAll: function selectAll(e) {\n      //获取当前按钮的状态\n      var rs = e.target.checked; //获取购物车数组列表\n      //创建循环\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this.list[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var item = _step3.value;\n          item.cb = rs; //实现全选 \n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    },\n    loadMore: function loadMore() {\n      var _this3 = this;\n\n      //1.创建URL\n      var url = \"cart\"; //2.发送ajax 请求\n\n      this.axios.get(url).then(function (result) {\n        //1.获取数组\n        var rows = result.data.data; //2.创建循环为数组中的元素添加cb属性\n\n        var _iteratorNormalCompletion4 = true;\n        var _didIteratorError4 = false;\n        var _iteratorError4 = undefined;\n\n        try {\n          for (var _iterator4 = rows[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n            var item = _step4.value;\n            item.cb = false;\n          } //3.将修改后数据赋值list\n\n        } catch (err) {\n          _didIteratorError4 = true;\n          _iteratorError4 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n              _iterator4.return();\n            }\n          } finally {\n            if (_didIteratorError4) {\n              throw _iteratorError4;\n            }\n          }\n        }\n\n        _this3.list = rows; //console.log(result);\n      }); //3.获取服务器购物车数据\n      //4.保存\n    },\n    delItem: function delItem(e) {\n      var _this4 = this;\n\n      this.$messagebox({\n        title: \"消息\",\n        message: \"是否删除商品\",\n        showConfirmButton: true,\n        showCancelButton: true\n      }).then(function (result) {\n        //console.log(result);\n        //如果用户选中取消按钮，就听停止执行\n        if (\"cancel\" == result) {\n          return;\n        } else {\n          //1.获取当前商品的id\n          var id = e.target.dataset.id; //2.发送Ajax请求删除商品\n\n          var url = \"del\";\n          var obj = {\n            id: id\n          };\n\n          _this4.axios.get(url, {\n            params: obj\n          }).then(function (result) {\n            console.log(result);\n\n            _this4.loadMore();\n          });\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["Cart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"cart\">\r\n        <!-- 全选按钮 -->\r\n        <div class=\"selectAll\">\r\n            全选 \r\n            <input type=\"checkbox\" @click=\"selectAll\">\r\n        </div>\r\n        <!-- 购物商品信息 -->\r\n        <div class=\"cart-item\" v-for=\"(item,index) of list\" :key=\"index\">\r\n            <div class=\"leftImgTxt\">\r\n                <input type=\"checkbox\" v-model=\"item.cb\" :checked=\"item.cb\">\r\n                <img :src=\"'http://127.0.0.1:3000/'+item.img\" class=\"img\">\r\n                <div class=\"rightImg\">\r\n                    <span>￥{{item.price.toFixed(2)}}</span>\r\n                    <span></span>\r\n                </div>\r\n            </div>\r\n            <mt-button @click=\"delItem\" :data-id=\"item.id\" class=\"delBtn\">删除</mt-button>\r\n        </div>\r\n        <!-- 删除选中的商品 -->\r\n        <div class=\"delAll\">\r\n            <mt-button @click=\"delAll\">清空购物车</mt-button>\r\n            <mt-button @click=\"delSelected\">删除选中的商品</mt-button>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    data(){\r\n        return {\r\n            list:[],\r\n\r\n        }\r\n    },\r\n    created(){\r\n        this.loadMore();\r\n    },\r\n    methods:{\r\n        delSelected(){\r\n            //删除选中的商品\r\n            //1.创建变量保存空字符串\r\n            var str=\"\";\r\n            //2.创建循环遍历每个数组中的元素\r\n            for(var item of this.list){\r\n                 //3.判断cb的选中状态是否为true\r\n                 if(item.cb){\r\n                    //4.获取当前id拼字符串\r\n                    str+=item.id+\",\";\r\n                 }\r\n            }\r\n           \r\n            //5.判断\r\n            if(str.length==0){\r\n                this.$messagebox(\"\",\"请选择要删除的商品\");\r\n                return;\r\n            }\r\n            str=str.substring(0,str.length-1);\r\n           //6.发送Ajax请求\r\n           var url=\"delAll\";\r\n           var obj={ids:str};\r\n           this.axios.get(url,{params:obj}).then(result=>{\r\n               this.loadMore();\r\n           });\r\n          },\r\n        delAll(){\r\n        //清空购物车中的商品\r\n        //创建变量保存空字符串\r\n        var str=\"\";\r\n        //创建循环遍历数组\r\n        for(var item of this.list){\r\n           //获取当前元素id凭借字符串\r\n           str+=item.id+\",\";\r\n        } \r\n        if(str.length==0){\r\n           this.$messagebox(\"\",\"请选中要删除的数据\");  \r\n           return;\r\n        }\r\n        //结果1,2,3\r\n            str=str.substring(0,str.length-1);\r\n                                                                                       \r\n        //发送Ajax请求获取数据\r\n        //创建url\r\n        var url=\"delAll\";\r\n        //创建obj\r\n        var obj={ids:str};\r\n        //发送Ajax请求\r\n        this.axios.get(url,{params:obj}).then(result=>{\r\n            this.loadMore();\r\n        })\r\n        },\r\n        selectAll(e){\r\n            //获取当前按钮的状态\r\n            var rs=e.target.checked;\r\n            //获取购物车数组列表\r\n            //创建循环\r\n            for(var item of this.list){\r\n                 item.cb=rs;//实现全选 \r\n              \r\n            }\r\n            \r\n        },\r\n        loadMore(){\r\n           //1.创建URL\r\n           var url=\"cart\";\r\n           //2.发送ajax 请求\r\n           this.axios.get(url).then(result=>{\r\n               //1.获取数组\r\n               var rows=result.data.data;\r\n               //2.创建循环为数组中的元素添加cb属性\r\n                for(var item of rows){\r\n                    item.cb=false;\r\n                }\r\n               //3.将修改后数据赋值list\r\n               this.list=rows;\r\n               //console.log(result);\r\n               \r\n               \r\n           })\r\n           //3.获取服务器购物车数据\r\n           //4.保存\r\n        },\r\n        delItem(e){\r\n            this.$messagebox({\r\n                title:\"消息\",\r\n                message:\"是否删除商品\",\r\n                showConfirmButton:true,\r\n                showCancelButton:true,\r\n            }).then(result=>{\r\n                //console.log(result);\r\n                //如果用户选中取消按钮，就听停止执行\r\n                if(\"cancel\"==result){\r\n                    return;\r\n                }else{\r\n                        //1.获取当前商品的id\r\n                        var id=e.target.dataset.id;\r\n                        \r\n                        //2.发送Ajax请求删除商品\r\n                        var url=\"del\";\r\n                        var obj={id:id};\r\n                        this.axios.get(url,{params:obj}).then(result=>{\r\n                            console.log(result);\r\n                            this.loadMore();\r\n                        })\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n/*最外层商品容器*/ \r\n    .cart-item{\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n    }\r\n    /*修饰左侧的图片与文字  */\r\n    .leftImgTxt{\r\n        display: flex;\r\n    }\r\n    .img{\r\n        width: 50px;\r\n        height:50px;\r\n    }\r\n    .rightImg{\r\n        display: flex;\r\n        margin-left: 15px;\r\n        align-items: center;\r\n    }\r\n</style>\r\n\r\n"],"sourceRoot":"src\\components\\xz\\common"}]}