{"remainingRequest":"C:\\Users\\web\\Desktop\\lxm\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\web\\Desktop\\lxm\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\web\\Desktop\\lxm\\vue_app_00\\src\\components\\xph\\login.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\web\\Desktop\\lxm\\vue_app_00\\src\\components\\xph\\login.vue","mtime":1561944034932},{"path":"C:\\Users\\web\\Desktop\\lxm\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"C:\\Users\\web\\Desktop\\lxm\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"C:\\Users\\web\\Desktop\\lxm\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      uname: '',\n      upass: '',\n      isShow: '',\n      tel: ''\n    };\n  },\n  methods: {\n    rig: function rig() {\n      var _this = this;\n\n      var tel = this.tel;\n      var obj = {\n        utel: tel\n      };\n      var url = \"phone\";\n      this.axios.get(url, {\n        params: obj\n      }).then(function (result) {\n        //console.log(result)\n        if (result.data.length < 1) {\n          return;\n        } else {\n          _this.$toast(\"该手机号已注册\");\n\n          _this.tel = \"\";\n          return;\n        }\n      });\n    },\n    login: function login() {\n      var _this2 = this;\n\n      //1.获取用户输入用户名\n      //2.获取用户登录密码\n      var n = this.uname;\n      var p = this.upass; //3.创建两个正则表达式/^\\d{3,10}$/\n\n      var nreg = /^[a-zA-Z0-9]{3,10}$/; //创建验证用户名的正在表达式\n\n      var preg = /^[a-zA-Z0-9]{3,8}$/; //创建验证密码的正在表达式\n      //4.判断用户名格式是否正确\n\n      if (!nreg.test(n)) {\n        this.$toast(\"用户名格式不正确<由3-10位字母、数字组成>\");\n        return;\n      } //5.判断密码格式是否正确\n\n\n      if (!preg.test(p)) {\n        this.$toast(\"密码格式不正确<由3-8位字母、数字组成>\");\n        return;\n      } //6.将用户名和密码发送ajax请求\n\n\n      var url = \"login\";\n      var obj = {\n        uname: n,\n        upass: p\n      }; //7.并获取服务器返回结果\n\n      this.axios.get(url, {\n        params: obj\n      }).then(function (result) {\n        if (result.data.code == 1) {\n          localStorage.setItem(\"uid\", result.data.uid); //1  //uid\n\n          localStorage.setItem(\"uname\", result.data.uname); //console.log(result.data.uid)\n\n          _this2.$messagebox(\"消息\", result.data.msg); //    localStorage.setItem(\"upass\",result.data.upass);\n          //9.返回成功 跳转到Home.vue\n\n\n          _this2.$router.push(\"/\");\n        } else {\n          //8.返回失败\n          _this2.$messagebox(\"消息\", result.data.msg);\n        }\n      });\n    },\n    showToggle: function showToggle() {\n      var _this3 = this;\n\n      this.isShow = true;\n      var n = this.uname;\n      var p = this.upass;\n      var tel = this.tel;\n      var nreg = /^[a-zA-Z0-9]{3,10}$/; //创建验证用户名的正则表达式\n\n      var preg = /^[a-zA-Z0-9]{3,8}$/; //创建验证密码的正则表达式\n\n      var telreg = /^1[3-8][0-9]{9}$/; //创建验证手机号的正则表达式\n      //判断用户名格式是否正确\n\n      if (!nreg.test(n)) {\n        this.$toast(\"用户名格式不正确<由3-10位字母、数字组成>\");\n        return;\n      } //判断密码格式是否正确\n\n\n      if (!preg.test(p)) {\n        this.$toast(\"密码格式不正确<由3-8位字母、数字组成>\");\n        return;\n      }\n\n      if (tel == \"\") {\n        this.$toast(\"手机号码不能为空\");\n        return;\n      }\n\n      if (!telreg.test(tel)) {\n        this.$toast(\"手机号码格式不正确\");\n        return;\n      }\n\n      var url = \"regist\";\n      var obj = {\n        uname: n,\n        upass: p,\n        utel: tel //console.log(obj);\n\n      };\n      this.axios.get(url, {\n        params: obj\n      }).then(function (result) {\n        var phone = result.data;\n\n        if (result.data.code == 4 && tel != phone.utel) {\n          //返回成功 跳转到Home.vue\n          _this3.$router.push(\"/login\");\n\n          alert(\"注册成功\");\n        } else {\n          //返回失败\n          //console.log(result);\n          _this3.$toast(\"该手机号已注册\"); //    this.$messagebox(\"消息\",result.data.msg);\n\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["login.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div>\r\n        <router-link  to=\"/\"></router-link>   \r\n        <div class=\"con-top\">\r\n            <span>登录 / 注册</span>\r\n        </div>\r\n        <div class=\"mt\">\r\n            <mt-field label=\"用户名\" placeholder=\"请输入用户名\" v-model=\"uname\"></mt-field>\r\n            <mt-field label=\"密码\" placeholder=\"请输入密码\" v-model=\"upass\" type=\"password\"></mt-field>\r\n            <!-- <mt-field label=\"手机号\" placeholder=\"请输入手机号\" type=\"tel\" v-model=\"tel\"  v-show=\"isShow\"   @click=\"rig\" ></mt-field> -->\r\n            <span v-show=\"isShow\" style=\"position:absolute;top:75%;left:3%;\">手机号</span>  <input style=\"width:65%;margin-left:32%;\" @blur=\"rig\" type=\"text\" v-model=\"tel\" placeholder=\"请输入手机号\" v-show=\"isShow\">\r\n        </div>\r\n        <div style=\"width:100%;text-align:center;\">\r\n           <div class=\"mt-bt\">\r\n                <mt-button type=\"primary\" size=\"large\" class=\"mt-size\" @click=\"login\">登录</mt-button>\r\n                <mt-button size=\"large\" class=\"mt-size2\" plain @click=\"showToggle\">注册</mt-button>     \r\n           </div>  \r\n        </div> \r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    data(){\r\n        return{\r\n            uname:'',\r\n            upass:'',\r\n            isShow:'',\r\n            tel:''\r\n        }\r\n    },\r\n\r\n    methods:{\r\n        rig(){\r\n            var tel=this.tel\r\n            var obj={utel:tel}\r\n            var url=\"phone\"; \r\n            this.axios.get(url,{params:obj}).then(result=>{\r\n                //console.log(result)\r\n                if(result.data.length<1){\r\n                return;\r\n                }else{\r\n                this.$toast(\"该手机号已注册\");\r\n                this.tel=\"\";\r\n                return;\r\n                }\r\n            }) \r\n        },\r\n\r\n        login(){\r\n           //1.获取用户输入用户名\r\n           //2.获取用户登录密码\r\n            var n=this.uname;\r\n            var p=this.upass;\r\n           //3.创建两个正则表达式/^\\d{3,10}$/\r\n            var nreg=/^[a-zA-Z0-9]{3,10}$/;//创建验证用户名的正在表达式\r\n            var preg=/^[a-zA-Z0-9]{3,8}$/;//创建验证密码的正在表达式\r\n          //4.判断用户名格式是否正确\r\n           if(!nreg.test(n)){\r\n               this.$toast(\"用户名格式不正确<由3-10位字母、数字组成>\");\r\n               return;\r\n           }\r\n          //5.判断密码格式是否正确\r\n         if(!preg.test(p)){\r\n             this.$toast(\"密码格式不正确<由3-8位字母、数字组成>\");\r\n             return;\r\n         }\r\n          //6.将用户名和密码发送ajax请求\r\n          var url=\"login\";\r\n          var obj={uname:n,upass:p};\r\n          //7.并获取服务器返回结果\r\n          this.axios.get(url,{params:obj}).then(result=>{\r\n           if(result.data.code==1){\r\n               localStorage.setItem(\"uid\",result.data.uid);//1  //uid\r\n               localStorage.setItem(\"uname\",result.data.uname);\r\n                  //console.log(result.data.uid)\r\n               this.$messagebox(\"消息\",result.data.msg);\r\n            //    localStorage.setItem(\"upass\",result.data.upass);\r\n             //9.返回成功 跳转到Home.vue\r\n            this.$router.push(\"/\");\r\n           }else{//8.返回失败\r\n             this.$messagebox(\"消息\",result.data.msg);\r\n           }\r\n          }); \r\n        },\r\n        showToggle(){\r\n            this.isShow = true;\r\n            var n=this.uname;\r\n            var p=this.upass;\r\n            var tel=this.tel;\r\n            var nreg=/^[a-zA-Z0-9]{3,10}$/;//创建验证用户名的正则表达式\r\n            var preg=/^[a-zA-Z0-9]{3,8}$/;//创建验证密码的正则表达式\r\n            var telreg=/^1[3-8][0-9]{9}$/;//创建验证手机号的正则表达式\r\n            //判断用户名格式是否正确\r\n            if(!nreg.test(n)){\r\n               this.$toast(\"用户名格式不正确<由3-10位字母、数字组成>\");\r\n               return;\r\n           }\r\n           //判断密码格式是否正确\r\n            if(!preg.test(p)){\r\n                this.$toast(\"密码格式不正确<由3-8位字母、数字组成>\");\r\n                return;\r\n            }\r\n            if(tel==\"\"){\r\n                this.$toast(\"手机号码不能为空\");\r\n                return;\r\n            }\r\n            if(!telreg.test(tel)){\r\n                this.$toast(\"手机号码格式不正确\");\r\n                return;\r\n            }\r\n            var url=\"regist\";\r\n            var obj={uname:n,upass:p,utel:tel}\r\n            //console.log(obj);\r\n            this.axios.get(url,{params:obj}).then(result=>{ \r\n                var phone=result.data;\r\n            if(result.data.code==4&&tel!=phone.utel){\r\n                //返回成功 跳转到Home.vue\r\n                this.$router.push(\"/login\");\r\n                alert(\"注册成功\");\r\n            }else{//返回失败\r\n             //console.log(result);\r\n                 this.$toast(\"该手机号已注册\");\r\n            //    this.$messagebox(\"消息\",result.data.msg);\r\n            } \r\n        });  \r\n        },\r\n    }\r\n}\r\n</script>\r\n<style>\r\n/* .mint-button--primary{background-color: #ff458e!important} */\r\n.back{position: absolute;left:3%;top:1.5%;z-index: 999;}\r\n.back button{background: transparent;border: none;color: #fff;font-size: 0.5rem;}\r\n.con-top{width:100%;height: 1.4rem;position: absolute;background-color: #26a2FF;top:0%;text-align:center;color: #fff;line-height: 1.4rem}\r\n.mt{position: absolute;top:18%;left: 6%;}\r\n.mint-cell-value{padding-top: 2%!important}\r\n.mt-bt{position:relative;line-height: 0.3rem}\r\n.mt-size,.mt-size2{width:70%!important;margin-left: 16%;}\r\n.mt-size{margin-top: 85%;}\r\n.mt-size2{margin-top: 3%;}\r\n</style>\r\n"],"sourceRoot":"src\\components\\xph"}]}